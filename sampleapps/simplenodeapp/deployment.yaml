apiVersion: v1
kind: Namespace
metadata:
  name: simplenode-dev
  annotations:
    keptn.sh/lifecycle-toolkit: "enabled"  # this lines tells the webhook to handle the namespace
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: simplenode
  namespace: simplenode-dev
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: simplenodeservice
  template:
    metadata:
      labels:
        # Keptn looks for these 3 labels:
        #   app.kubernetes.io/part-of
        #   app.kubernetes.io/name
        #   app.kubernetes.io/version      
        app.kubernetes.io/name: simplenodeservice
        app.kubernetes.io/part-of: simplenode
        app.kubernetes.io/version: 3.0.2
      annotations:
        # keptn.sh/pre-deployment-evaluations: evaluate-dependencies
        # keptn.sh/pre-deployment-tasks: notify
        # keptn.sh/post-deployment-evaluations: evaluate-deployment
        # keptn.sh/post-deployment-tasks: notify
    spec:
      containers:
      - name: simplenode
        image: "grabnerandi/simplenodeservice:4.0.2"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          protocol: TCP
          containerPort: 8080
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: "metadata.name"
        - name: DEPLOYMENT_NAME
          valueFrom:
            fieldRef:
              fieldPath: "metadata.labels['deployment']"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: "metadata.name"
        - name: DEPLOYMENT_NAME
          valueFrom:
            fieldRef:
              fieldPath: "metadata.labels['deployment']"
        - name: DT_RELEASE_VERSION
          valueFrom:
            fieldRef:
              fieldPath: "metadata.labels['app.kubernetes.io/version']"
        - name: DT_RELEASE_PRODUCT
          value: "simplenodeproject"
        - name: DT_RELEASE_STAGE
          value: "stage"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 15
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
      - name: heckoproxy
        image: ghcr.io/heckelmann/workshop-registry/heckoproxy:v0.0.1
        ports:
        - name: promproxy
          containerPort: 80
        env:
        - name: PROXY_PORT
          value: "80"
        - name: FORWARDING_ADDRESS
          value: "localhost:8080"
        imagePullPolicy: Always            
